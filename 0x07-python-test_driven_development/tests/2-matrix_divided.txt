The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

Importing the function module:

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Check for module docstring:
	>>> m = __import__("2-matrix_divided").__doc__
	>>> len(m) > 1
	True

Check for division by zero:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Check for List but not matrix:
	>>> matrix = [1, 2, 3, 4]
	>>> matrix_divided(matrix, 5)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for Not matrix:
	>>> matrix = 5
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last)
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for matrix of numbers and division by non zero:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check for list and no list item:
	>>> matrix = [[1, 2, 3], "matrix"]
        >>> matrix_divided(matrix, 5)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for list of lists of unequal length:
	>>> matrix = [[1, 2, 3], [4, 5]]
        >>> matrix_divided(matrix, 5)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats
